{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steve\\\\OneDrive\\\\Desktop\\\\outeredge-ethernity-frontend\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = _ref => {\n  _s();\n  let {\n    setAuth\n  } = _ref;\n  const [inputs, setInputs] = useState({\n    username: \" \",\n    password: \"\",\n    queue_id: '1'\n  });\n  const {\n    username,\n    password,\n    queue_id\n  } = inputs;\n  const onChange = e => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value\n    });\n  };\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = {\n        username,\n        password,\n        queue_id\n      };\n      const response =\n      //await fetch(\"https://localhost:5000/auth/register\", \n      await fetch(\"https://flutter-app-api.onrender.com/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseResponse = await response.json();\n      console.log(parseResponse);\n      //localStorage.setItem(\"token\", parseResponse.token);\n      setAuth(true);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center my-5\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"username\",\n        placeholder: \"email\",\n        className: \"form-control my-3\",\n        value: username,\n        onChange: e => onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"password\",\n        className: \"form-control my-3\",\n        value: password,\n        onChange: e => onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success btn-block\",\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"../testlogin\",\n      children: \" Login \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"dAU7Fd3Qj7vmGpoFNLD10aG7hP0=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Fragment","useState","Link","Register","setAuth","inputs","setInputs","username","password","queue_id","onChange","e","target","name","value","onSubmitForm","preventDefault","body","response","fetch","method","headers","JSON","stringify","parseResponse","json","console","log","error","message"],"sources":["C:/Users/steve/OneDrive/Desktop/outeredge-ethernity-frontend/frontend/src/components/Register.js"],"sourcesContent":["import React, {Fragment, useState} from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Register = ({setAuth}) => {\r\n    const [inputs, setInputs] = useState({\r\n        username: \" \",\r\n        password: \"\",\r\n        queue_id: '1'\r\n    })\r\n     \r\n    const {username, password, queue_id} = inputs;\r\n    const onChange = (e) => {\r\n        setInputs({...inputs, [e.target.name] : e.target.value})\r\n    }\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const body = {username, password, queue_id}\r\n \r\n            const response = //await fetch(\"https://localhost:5000/auth/register\", \r\n            await fetch(\"https://flutter-app-api.onrender.com/signup\",\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\"Content-Type\" : \"application/json\"},\r\n                    body: JSON.stringify(body)\r\n                }\r\n            );\r\n\r\n            const parseResponse = await response.json();\r\n            console.log(parseResponse);\r\n            //localStorage.setItem(\"token\", parseResponse.token);\r\n            setAuth(true);\r\n\r\n        } catch (error) {\r\n            console.error(error.message)\r\n        }\r\n    }\r\n    return(\r\n        <Fragment>\r\n            <h1 className=\"text-center my-5\">Register</h1>\r\n            <form onSubmit={onSubmitForm}>\r\n                <input \r\n                type=\"email\" \r\n                name=\"username\" \r\n                placeholder=\"email\" \r\n                className=\"form-control my-3\" \r\n                value={username}\r\n                onChange = {e => onChange(e)}\r\n                />\r\n                <input \r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"password\"\r\n                className=\"form-control my-3\"\r\n                value={password}\r\n                onChange = {e => onChange(e)}\r\n                />\r\n                \r\n                <button className=\"btn btn-success btn-block\"> Submit </button>\r\n            </form>\r\n            <Link to=\"../testlogin\"> Login </Link>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Register;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,QAAQ,QAAO,OAAO;AAC/C,SAASC,IAAI,QAAQ,kBAAkB;AAAA;AAEvC,MAAMC,QAAQ,GAAG,QAAe;EAAA;EAAA,IAAd;IAACC;EAAO,CAAC;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC;IACjCM,QAAQ,EAAE,GAAG;IACbC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAM;IAACF,QAAQ;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAGJ,MAAM;EAC7C,MAAMK,QAAQ,GAAIC,CAAC,IAAK;IACpBL,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAE,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAIF,CAAC,CAACC,MAAM,CAACE;IAAK,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAC9BA,CAAC,CAACK,cAAc,EAAE;IAClB,IAAI;MACA,MAAMC,IAAI,GAAG;QAACV,QAAQ;QAAEC,QAAQ;QAAEC;MAAQ,CAAC;MAE3C,MAAMS,QAAQ;MAAG;MACjB,MAAMC,KAAK,CAAC,6CAA6C,EACrD;QACIC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAG;QAAkB,CAAC;QAC9CJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI;MAC7B,CAAC,CACJ;MAED,MAAMO,aAAa,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;MAC3CC,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC;MAC1B;MACApB,OAAO,CAAC,IAAI,CAAC;IAEjB,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;IAChC;EACJ,CAAC;EACD,oBACI,QAAC,QAAQ;IAAA,wBACL;MAAI,SAAS,EAAC,kBAAkB;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eAC9C;MAAM,QAAQ,EAAEd,YAAa;MAAA,wBACzB;QACA,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,OAAO;QACnB,SAAS,EAAC,mBAAmB;QAC7B,KAAK,EAAER,QAAS;QAChB,QAAQ,EAAII,CAAC,IAAID,QAAQ,CAACC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAC3B,eACF;QACA,IAAI,EAAC,UAAU;QACf,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,UAAU;QACtB,SAAS,EAAC,mBAAmB;QAC7B,KAAK,EAAEH,QAAS;QAChB,QAAQ,EAAIG,CAAC,IAAID,QAAQ,CAACC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAC3B,eAEF;QAAQ,SAAS,EAAC,2BAA2B;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5D,eACP,QAAC,IAAI;MAAC,EAAE,EAAC,cAAc;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/B;AAEnB,CAAC;AAAC,GA7DIR,QAAQ;AAAA,KAARA,QAAQ;AA+Dd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}