{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steve\\\\OneDrive\\\\Desktop\\\\TextBasedGame\\\\frontend\\\\src\\\\components\\\\chatOutput.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from \"react\";\n//import { output } from \"../../../server/controllers/chat_controller\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatOutput = _ref => {\n  _s();\n  let {\n    setAuth\n  } = _ref;\n  const [message, setMessage] = useState('');\n  const [name, setName] = useState('');\n  //const [response, setResponse] = useState('');\n\n  async function getName() {\n    try {\n      const response = await fetch('http://localhost:5000/dashboard', {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseResponse = await response.json();\n      console.log(parseResponse);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n  const HandleMulChoiceBut = async (e, choice) => {\n    e.preventDefault();\n    try {\n      //const body = response;\n      await fetch(`http://localhost:5000/chat/choice`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: choice\n        }) //json string, like literally string but json inside. would need to parse to make it usable\n      }).then(res => res.json()).then(data => setMessage(data.message));\n      //const jsonData = await response.json();\n      //JSON.stringify({jsonData});\n      //setMessage(jsonData.message);\n      // .then((res) => res.json())\n      // .then((data) => setResponse(data.message));\n      console.log(message);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  const handleStartButton = async e => {\n    e.preventDefault();\n    try {\n      //const body = response;\n      await fetch(`http://localhost:5000/chat/start`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n        //body: JSON.stringify( {message: } ), //json string, like literally string but json inside. would need to parse to make it usable\n      }).then(res => res.json()).then(data => setMessage(data.message));\n      //const jsonData = await response.json();\n      //JSON.stringify({jsonData});\n      //setMessage(jsonData.message);\n      // .then((res) => res.json())\n      // .then((data) => setResponse(data.message));\n      console.log(message);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [name, \"'s Adventure\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mt-5\",\n      onSubmit: HandleMulChoiceBut,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn col-2 m-3\",\n        onClick: e => HandleMulChoiceBut(e, 'A'),\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn col-2 m-3\",\n        onClick: e => HandleMulChoiceBut(e, 'B'),\n        children: \"B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn col-2 m-3\",\n        onClick: e => HandleMulChoiceBut(e, 'C'),\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn col-2 m-3\",\n        onClick: e => handleStartButton(e),\n        children: \"START\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"text-left mt-5\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 12\n  }, this);\n};\n_s(ChatOutput, \"OUnPanvQejIglmwpAttS8M9YbYE=\");\n_c = ChatOutput;\nexport default ChatOutput;\nvar _c;\n$RefreshReg$(_c, \"ChatOutput\");","map":{"version":3,"names":["React","Fragment","useState","ChatOutput","setAuth","message","setMessage","name","setName","getName","response","fetch","method","headers","token","localStorage","parseResponse","json","console","log","error","HandleMulChoiceBut","e","choice","preventDefault","body","JSON","stringify","then","res","data","handleStartButton"],"sources":["C:/Users/steve/OneDrive/Desktop/TextBasedGame/frontend/src/components/chatOutput.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\r\n//import { output } from \"../../../server/controllers/chat_controller\";\r\n\r\nconst ChatOutput = ({setAuth}) => {\r\n\r\n    const [message, setMessage] = useState('');\r\n    const [name, setName] = useState('');\r\n    //const [response, setResponse] = useState('');\r\n    \r\n    async function getName() {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/dashboard',{\r\n                method: \"GET\",\r\n                headers: {token : localStorage.token}\r\n            });\r\n            const parseResponse = await response.json();\r\n            console.log(parseResponse);\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n    }\r\n    const HandleMulChoiceBut = async (e, choice) => {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n            //const body = response;\r\n                await fetch(`http://localhost:5000/chat/choice`,{\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type' : 'application/json'\r\n                    },\r\n                    body: JSON.stringify( {message: choice} ), //json string, like literally string but json inside. would need to parse to make it usable\r\n                })\r\n                .then((res) => res.json())\r\n                .then((data) => setMessage(data.message));\r\n                //const jsonData = await response.json();\r\n                //JSON.stringify({jsonData});\r\n                //setMessage(jsonData.message);\r\n                // .then((res) => res.json())\r\n                // .then((data) => setResponse(data.message));\r\n                console.log(message);\r\n              \r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n    }\r\n     \r\n    const handleStartButton = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            //const body = response;\r\n                await fetch(`http://localhost:5000/chat/start`,{\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type' : 'application/json'\r\n                    },\r\n                    //body: JSON.stringify( {message: } ), //json string, like literally string but json inside. would need to parse to make it usable\r\n                })\r\n                .then((res) => res.json())\r\n                .then((data) => setMessage(data.message));\r\n                //const jsonData = await response.json();\r\n                //JSON.stringify({jsonData});\r\n                //setMessage(jsonData.message);\r\n                // .then((res) => res.json())\r\n                // .then((data) => setResponse(data.message));\r\n                console.log(message);\r\n              \r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n      \r\n    }\r\n    return <Fragment>\r\n    <h1>{name}'s Adventure</h1>\r\n    <form className=\"mt-5\" onSubmit={HandleMulChoiceBut}>\r\n        {/* <textarea\r\n            value={message.message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            >\r\n        </textarea> */}\r\n        <button className=\"btn col-2 m-3\" onClick={(e) => HandleMulChoiceBut(e, 'A')}>A</button>\r\n        <button className=\"btn col-2 m-3\" onClick={(e) => HandleMulChoiceBut(e, 'B')}>B</button>\r\n        <button className=\"btn col-2 m-3\" onClick={(e) => HandleMulChoiceBut(e, 'C')}>C</button>\r\n        <button className=\"btn col-2 m-3\" onClick={(e) => handleStartButton(e)}>START</button>\r\n    </form>\r\n    <pre className=\"text-left mt-5\"  >{message}</pre> \r\n    </Fragment>\r\n}\r\n\r\nexport default ChatOutput"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}