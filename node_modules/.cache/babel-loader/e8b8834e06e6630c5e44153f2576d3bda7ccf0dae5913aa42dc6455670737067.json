{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steve\\\\OneDrive\\\\Desktop\\\\TextBasedGame\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [inputs, setInputs] = useState({\n    user_email: \" \",\n    user_name: \" \",\n    user_password: \" \"\n  });\n  const {\n    user_email,\n    user_password,\n    user_name\n  } = inputs;\n  const onChange = e => {\n    setInputs({\n      ...inputs,\n      [e.target.user_name]: e.target.value\n    });\n  };\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = {\n        user_email,\n        user_password,\n        user_name\n      };\n      console.log(body);\n      const response = await fetch(\"http://localhost:5000/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseResponse = await response.json();\n      console.log(parseResponse);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center my-5\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"email\",\n        className: \"form-control my-3\",\n        value: user_email,\n        onChange: e => onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"password\",\n        className: \"form-control my-3\",\n        value: user_password,\n        onChange: e => onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"name\",\n        className: \"form-control my-3\",\n        value: user_name,\n        onChange: e => onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success btn-block\",\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"H38jnhdqSw1ZaCwM+fBA3Oxp+KI=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Fragment","useState","Register","inputs","setInputs","user_email","user_name","user_password","onChange","e","target","value","onSubmitForm","preventDefault","body","console","log","response","fetch","method","headers","JSON","stringify","parseResponse","json","error","message"],"sources":["C:/Users/steve/OneDrive/Desktop/TextBasedGame/frontend/src/components/Register.js"],"sourcesContent":["import React, {Fragment, useState} from \"react\";\r\n\r\n\r\nconst Register = () => {\r\n    const [inputs, setInputs] = useState({\r\n        user_email: \" \",\r\n        user_name: \" \",\r\n        user_password: \" \"\r\n    \r\n    })\r\n\r\n    const {user_email, user_password, user_name} = inputs;\r\n    const onChange = (e) => {\r\n        setInputs({...inputs, [e.target.user_name] : e.target.value})\r\n    }\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const body = {user_email, user_password, user_name}\r\n            console.log(body);\r\n            const response = await fetch(\"http://localhost:5000/auth/register\",\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\"Content-Type\" : \"application/json\"},\r\n                    body: JSON.stringify(body)\r\n                }\r\n            );\r\n\r\n            const parseResponse = await response.json();\r\n            console.log(parseResponse);\r\n        } catch (error) {\r\n            console.error(error.message)\r\n        }\r\n    }\r\n    return(\r\n        <Fragment>\r\n            <h1 className=\"text-center my-5\">Register</h1>\r\n            <form onSubmit={onSubmitForm}>\r\n                <input \r\n                type=\"email\" \r\n                name=\"email\" \r\n                placeholder=\"email\" \r\n                className=\"form-control my-3\" \r\n                value={user_email}\r\n                onChange = {e => onChange(e)}\r\n                />\r\n                <input \r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"password\"\r\n                className=\"form-control my-3\"\r\n                value={user_password}\r\n                onChange = {e => onChange(e)}\r\n                />\r\n                <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                placeholder=\"name\" \r\n                className=\"form-control my-3\"\r\n                value={user_name}\r\n                onChange = {e => onChange(e)}\r\n                />\r\n                <button className=\"btn btn-success btn-block\"> Submit </button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Register;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAGhD,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGH,QAAQ,CAAC;IACjCI,UAAU,EAAE,GAAG;IACfC,SAAS,EAAE,GAAG;IACdC,aAAa,EAAE;EAEnB,CAAC,CAAC;EAEF,MAAM;IAACF,UAAU;IAAEE,aAAa;IAAED;EAAS,CAAC,GAAGH,MAAM;EACrD,MAAMK,QAAQ,GAAIC,CAAC,IAAK;IACpBL,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAE,CAACM,CAAC,CAACC,MAAM,CAACJ,SAAS,GAAIG,CAAC,CAACC,MAAM,CAACC;IAAK,CAAC,CAAC;EACjE,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAC9BA,CAAC,CAACI,cAAc,EAAE;IAClB,IAAI;MACA,MAAMC,IAAI,GAAG;QAACT,UAAU;QAAEE,aAAa;QAAED;MAAS,CAAC;MACnDS,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAC9D;QACIC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAG;QAAkB,CAAC;QAC9CN,IAAI,EAAEO,IAAI,CAACC,SAAS,CAACR,IAAI;MAC7B,CAAC,CACJ;MAED,MAAMS,aAAa,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;MAC3CT,OAAO,CAACC,GAAG,CAACO,aAAa,CAAC;IAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZV,OAAO,CAACU,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;IAChC;EACJ,CAAC;EACD,oBACI,QAAC,QAAQ;IAAA,wBACL;MAAI,SAAS,EAAC,kBAAkB;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eAC9C;MAAM,QAAQ,EAAEd,YAAa;MAAA,wBACzB;QACA,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC,OAAO;QACZ,WAAW,EAAC,OAAO;QACnB,SAAS,EAAC,mBAAmB;QAC7B,KAAK,EAAEP,UAAW;QAClB,QAAQ,EAAII,CAAC,IAAID,QAAQ,CAACC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAC3B,eACF;QACA,IAAI,EAAC,UAAU;QACf,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,UAAU;QACtB,SAAS,EAAC,mBAAmB;QAC7B,KAAK,EAAEF,aAAc;QACrB,QAAQ,EAAIE,CAAC,IAAID,QAAQ,CAACC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAC3B,eACF;QACA,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,MAAM;QAClB,SAAS,EAAC,mBAAmB;QAC7B,KAAK,EAAEH,SAAU;QACjB,QAAQ,EAAIG,CAAC,IAAID,QAAQ,CAACC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAC3B,eACF;QAAQ,SAAS,EAAC,2BAA2B;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5D;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEnB,CAAC;AAAC,GAhEIP,QAAQ;AAAA,KAARA,QAAQ;AAkEd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}